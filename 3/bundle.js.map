{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/film.js","webpack:///./src/mock/filter.js","webpack:///./src/utils/common.js","webpack:///./src/utils/project.js","webpack:///./src/utils/render.js","webpack:///./src/view/abstract.js","webpack:///./src/view/comments.js","webpack:///./src/view/film-card.js","webpack:///./src/view/film-count.js","webpack:///./src/view/film-details.js","webpack:///./src/view/film-list.js","webpack:///./src/view/films-sort.js","webpack:///./src/view/filter.js","webpack:///./src/view/most-commented-films.js","webpack:///./src/view/no-films.js","webpack:///./src/view/show-more-button.js","webpack:///./src/view/top-rated-films.js","webpack:///./src/view/user-rating.js"],"names":[],"mappings":"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AA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,iCAAiC,oDAAY;AAC5D;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wBAAwB,oDAAY;AACnD;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEe,6BAA6B,oDAAY;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGe,4BAA4B,oDAAY;AACvD;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,yBAAyB,oDAAY;AACpD;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export const MAX_DESCRIPTION_LENGTH = 140;\n\nexport const EMOJIS = [`smile`, `angry`, `puke`, `sleeping`];\n\nexport const SortType = {\n  DEFAULT: `default`,\n  DATE: `date`,\n  RATING: `rating`,\n};\n","import {render, RenderPosition, remove} from \"./utils/render.js\";\nimport {escPressHandler} from \"./utils/project.js\";\nimport {FILM_COUNT} from \"./view/film-count.js\";\nimport UserRatingView from \"./view/user-rating.js\";\nimport FilterView from \"./view/filter.js\";\nimport SortView from \"./view/films-sort.js\";\nimport filmListView from \"./view/film-list.js\";\nimport FilmCardView from \"./view/film-card.js\";\nimport ShowMoreButtonView from \"./view/show-more-button.js\";\nimport FilmDetailsView from \"./view/film-details.js\";\nimport CommentsView from \"./view/comments.js\";\nimport TopRatedFilmsView from \"./view/top-rated-films.js\";\nimport MostCommentedFilmsView from \"./view/most-commented-films.js\";\nimport FilmCountView from \"./view/film-count.js\";\nimport NoFilmsView from \"./view/no-films.js\";\nimport {generateFilm} from \"./mock/film.js\";\nimport {generateFilmsFilter} from \"./mock/filter.js\";\n\nconst FILM_COUNT_PER_STEP = 5;\nconst FILM_EXTRA_COUNT = 2;\n\nconst films = new Array(FILM_COUNT).fill().map(generateFilm);\nconst filters = generateFilmsFilter(films);\n\nconst siteHeaderElement = document.querySelector(`.header`);\nconst siteMainElement = document.querySelector(`.main`);\n\nconst filmListComponent = new filmListView();\nconst filmListElement = filmListComponent.getElement().querySelector(`.films-list`);\nconst filmsContainerElement = filmListElement.querySelector(`.films-list__container`);\n\nconst renderFilmDetails = (film) => {\n  const filmDetailsComponent = new FilmDetailsView(film);\n  const filmDetailsFormElement = filmDetailsComponent.getElement().querySelector(`.film-details__inner`);\n  render(filmListComponent.getElement(), filmDetailsComponent.getElement(), RenderPosition.BEFOREEND);\n  render(filmDetailsFormElement, new CommentsView(film).getElement(), RenderPosition.BEFOREEND);\n\n  const closeFilmDetails = () => {\n    filmDetailsComponent.getElement().remove();\n  };\n\n  const detailsScreenEscPressHandler = (evt) => escPressHandler(evt, closeFilmDetails);\n\n  if (filmDetailsComponent.getElement()) {\n    document.addEventListener(`keydown`, detailsScreenEscPressHandler);\n  } else {\n    document.removeEventListener(`keydown`, detailsScreenEscPressHandler);\n  }\n\n  filmDetailsComponent.setCloseButtonClickHandler(() => {\n    closeFilmDetails();\n    document.removeEventListener(`keydown`, detailsScreenEscPressHandler);\n  });\n};\n\nconst renderFilm = (filmsContainer, film) => {\n  const filmCardComponent = new FilmCardView(film);\n\n  // Открывает попап\n  filmCardComponent.setFilmCardClickHandler(() => {\n    renderFilmDetails(film);\n  });\n\n  render(filmsContainer, filmCardComponent.getElement(), RenderPosition.BEFOREEND);\n};\n\nconst renderFilmsList = (filmListContainer, filmList) => {\n  render(filmListContainer, filmListComponent.getElement(), RenderPosition.BEFOREEND);\n\n  for (let i = 0; i < Math.min(filmList.length, FILM_COUNT_PER_STEP); i++) {\n    renderFilm(filmsContainerElement, filmList[i]);\n  }\n\n  if (filmList.length > FILM_COUNT_PER_STEP) {\n    let renderedFilmCount = FILM_COUNT_PER_STEP;\n    const showMoreButtonComponent = new ShowMoreButtonView();\n    render(filmListElement, showMoreButtonComponent.getElement(), RenderPosition.BEFOREEND);\n\n    showMoreButtonComponent.setShowMoreClickHandler(() => {\n      filmList\n        .slice(renderedFilmCount, renderedFilmCount + FILM_COUNT_PER_STEP)\n        .forEach((film) => renderFilm(filmsContainerElement, film));\n\n      renderedFilmCount += FILM_COUNT_PER_STEP;\n\n      if (renderedFilmCount >= filmList.length) {\n        showMoreButtonComponent.getElement().remove();\n      }\n    });\n  }\n\n  render(filmListComponent.getElement(), new TopRatedFilmsView().getElement(), RenderPosition.BEFOREEND);\n  render(filmListComponent.getElement(), new MostCommentedFilmsView().getElement(), RenderPosition.BEFOREEND);\n\n  const filmsExtraListElement = filmListComponent.getElement().querySelectorAll(`.films-list--extra`);\n\n  filmsExtraListElement.forEach((filmExtraListElement) => {\n    const filmsExtraContainerElement = filmExtraListElement.querySelector(`.films-list__container`);\n\n    for (let i = 0; i < FILM_EXTRA_COUNT; i++) {\n      renderFilm(filmsExtraContainerElement, filmList[i]);\n    }\n  });\n};\n\nrender(siteHeaderElement, new UserRatingView().getElement(), RenderPosition.BEFOREEND);\nrender(siteMainElement, new FilterView(filters).getElement(), RenderPosition.BEFOREEND);\nrender(siteMainElement, new SortView().getElement(), RenderPosition.BEFOREEND);\n\nif (FILM_COUNT === 0) {\n  render(siteMainElement, new NoFilmsView().getElement(), RenderPosition.BEFOREEND);\n} else {\n  renderFilmsList(siteMainElement, films);\n}\n\nconst filmCountElement = document.querySelector(`.footer__statistics`);\nrender(filmCountElement, new FilmCountView().getElement(), RenderPosition.BEFOREEND);\n","import {getRandomInteger, getRandomNumber, getElementFromArray, generateSentenceFromString, generateRandomArray, generateRandomDate} from \"../utils/common.js\";\nimport {getFormatTime} from \"../utils/project.js\";\nimport {EMOJIS} from \"../const.js\";\n\nconst NAMES_MIN_COUNT = 2;\nconst NAMES_MAX_COUNT = 4;\nconst GENRES_MIN_COUNT = 1;\nconst GENRES_MAX_COUNT = 4;\n\nconst COMMENT_MIN_COUNT = 1;\nconst COMMENT_MAX_COUNT = 5;\nconst RATING_MIN_VALUE = 1;\nconst RATING_MAX_VALUE = 10;\n\nconst FILM_CREATE_MIN_YEAR = 1900;\nconst FILM_CREATE_MAX_YEAR = 2020;\nconst FILM_MIN_DURATION = 1200;\nconst FILM_MAX_DURATION = 14400;\n\nconst COMMENTS_MIN_COUNT = 1;\nconst COMMENTS_MAX_COUNT = 5;\n\nconst DATE_OF_FIRST_COMMENT = `2010, 2, 1`;\n\nconst generateId = () => Date.now() + parseInt(Math.random() * 10000, 10);\n\nconst filmTitles = [\n  `The Dance of Life`,\n  `Sagebrush Trail`,\n  `The Man with the Golden Arm`,\n  `Santa Claus Conquers the Martians`,\n  `Popeye the Sailor Meets Sindbad the Sailor`,\n];\n\nconst filmPosters = [\n  `made-for-each-other.png`,\n  `popeye-meets-sinbad.png`,\n  `sagebrush-trail.jpg`,\n  `santa-claus-conquers-the-martians.jpg`,\n  `the-dance-of-life.jpg`,\n  `the-great-flamarion.jpg`,\n  `the-man-with-the-golden-arm.jpg`,\n];\n\nconst descriptionString = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra. Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante. Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis. Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.`;\n\nconst descriptionArray = descriptionString.split(`. `);\n\nconst filmGenres = [`Western`, `Musical`, `Drama`, `Comedy`, `Cartoon`, `Horror`, `Film-Noir`, `Mystery`];\n\nconst filmOriginTitles = [\n  `The Dance of Life`,\n  `Sagebrush Trail`,\n  `The Man with the Golden Arm`,\n  `Santa Claus Conquers the Martians`,\n  `Popeye the Sailor Meets Sindbad the Sailor`,\n];\n\nconst namesOfDirectors = [\n  `Steven Spielberg`,\n  `Martin Scorsese `,\n  `Alfred Hitchcock`,\n  `Stanley Kubrick`,\n  `Quentin Tarantino`,\n  `Orson Welles`,\n  `Francis Ford Coppola`,\n  `Ridley Scott`,\n];\n\nconst namesOfWriters = [\n  `David O. Russell`,\n  `James Cameron`,\n  `Aaron Sorkin`,\n  `John Ridley`,\n  `Quentin Tarantino`,\n  `Steven Spielberg`,\n];\n\nconst namesOfActors = [\n  `Robert De Niro`,\n  `Jack Nicholson`,\n  `Meryl Streep`,\n  `Tom Hanks`,\n  `Leonardo DiCaprio`,\n  `Kate Winslet`,\n  `Jodie Foster`,\n  `Charles Chaplin`,\n];\n\nconst names = [\n  `John Smith`,\n  `Lise Kane`,\n  `Michel Mur`,\n  `Genry Right`,\n  `Mary Black`,\n  `Tim Bert`,\n];\n\nconst countries = [`Canada`, `China`, `UK`, `Russia`, `Australia`, `USA`];\nconst ageLimits = [`0+`, `6+`, `12+`, `14+`, `16+`, `18+`];\n\n\nconst date = generateRandomDate(new Date(DATE_OF_FIRST_COMMENT), new Date());\nconst minuteFormat = (date.getMinutes() < 10 ? `0` : ``) + date.getMinutes();\n\nconst filmComment = {\n  emoji: getElementFromArray(EMOJIS),\n  comment: generateSentenceFromString(descriptionString),\n  commentDate: `${date.getFullYear()}/${date.getMonth()}/${date.getDate()} ${date.getHours()}:${minuteFormat}`,\n  author: getElementFromArray(names),\n};\n\nconst generateFilmComment = () => {\n  const {emoji, comment, commentDate, author} = filmComment;\n\n  return {\n    emoji,\n    comment,\n    commentDate,\n    author,\n  };\n};\n\nexport const generateFilm = () => {\n  const id = generateId();\n  const filmTitle = getElementFromArray(filmTitles);\n  const filmPoster = getElementFromArray(filmPosters);\n  const description = generateRandomArray(descriptionArray, 1, 5);\n  const rating = getRandomNumber(RATING_MIN_VALUE, RATING_MAX_VALUE).toFixed(1);\n  const filmCreateYear = getRandomInteger(FILM_CREATE_MIN_YEAR, FILM_CREATE_MAX_YEAR);\n\n  const filmDurationInSecond = getRandomInteger(FILM_MIN_DURATION, FILM_MAX_DURATION);\n  const filmDuration = getFormatTime(filmDurationInSecond);\n  const genres = generateRandomArray(filmGenres, GENRES_MIN_COUNT, GENRES_MAX_COUNT);\n  const commentsCount = getRandomInteger(COMMENTS_MIN_COUNT, COMMENTS_MAX_COUNT);\n\n  const filmOriginTitle = getElementFromArray(filmOriginTitles);\n  const director = getElementFromArray(namesOfDirectors);\n  const writers = generateRandomArray(namesOfWriters, NAMES_MIN_COUNT, NAMES_MAX_COUNT).join(`, `);\n  const actors = generateRandomArray(namesOfActors, NAMES_MIN_COUNT, NAMES_MAX_COUNT).join(`, `);\n  const country = getElementFromArray(countries);\n  const ageLimit = getElementFromArray(ageLimits);\n\n  const comments = new Array(getRandomInteger(COMMENT_MIN_COUNT, COMMENT_MAX_COUNT)).fill().map(generateFilmComment);\n\n\n  return {\n    id,\n    filmTitle,\n    filmPoster,\n    description,\n    rating,\n    filmCreateYear,\n    filmDuration,\n    genres,\n    commentsCount,\n\n    filmOriginTitle,\n    director,\n    writers,\n    actors,\n    date,\n    country,\n    ageLimit,\n    isWatchlist: Boolean(getRandomInteger(0, 1)),\n    isWatched: Boolean(getRandomInteger(0, 1)),\n    isFavorite: Boolean(getRandomInteger(0, 1)),\n    isEmoji: Boolean(getRandomInteger(0, 1)),\n    comments,\n  };\n};\n","export const generateFilmsFilter = (films) => {\n  return {\n    watchlist: films.filter((film) => film.isWatchlist).length,\n    history: films.filter((film) => film.isWatched).length,\n    favorites: films.filter((film) => film.isFavorite).length,\n  };\n};\n","export const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const getRandomNumber = (min, max) => {\n  return Math.random() * (max - min) + min;\n};\n\nexport const getElementFromArray = (array) => {\n  const randomIndex = getRandomInteger(0, array.length - 1);\n\n  return array[randomIndex];\n};\n\nexport const generateSentenceFromString = (string) => {\n  const sentencesArray = string.split(`. `);\n  const sentence = getElementFromArray(sentencesArray);\n\n  return sentence;\n};\n\nexport const generateRandomArray = (array, minCount, maxCount) => {\n  const count = getRandomInteger(minCount, maxCount);\n  const randomArray = new Array(count).fill().map(() => getElementFromArray(array));\n\n  return randomArray;\n};\n\nexport const generateRandomDate = function (start, end) {\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n};\n\n// обновляет массив, заменяя обновлённый элемент\nexport const updateItem = (items, update) => {\n  const index = items.findIndex((item) => item.id === update.id);\n\n  if (index === -1) {\n    return items;\n  }\n\n  return [\n    ...items.slice(0, index),\n    update,\n    ...items.slice(index + 1)\n  ];\n};\n","export const getFormatTime = (seconds) => {\n  const hours = `${Math.floor(seconds / 3600)}h`;\n  const minutes = `${Math.floor(seconds / 60) % 60}m`;\n  const formatTime = hours.slice(0, 1) === `0` ? `${minutes}` : `${hours} ${minutes}`;\n\n  return formatTime;\n};\n\nexport const checkActiveElement = (active, activeClass) => active\n  ? activeClass\n  : ``;\n\nexport const escPressHandler = (evt, action) => {\n  if (evt.key === `Escape` || evt.key === `Esc`) {\n    evt.preventDefault();\n    action();\n  }\n};\n\nconst getWeightForNoDataFilm = (dateA, dateB) => {\n  if (dateA === null && dateB === null) {\n    return 0;\n  }\n\n  if (dateA === null) {\n    return 1;\n  }\n\n  if (dateB === null) {\n    return -1;\n  }\n\n  return null;\n};\n\nexport const sortByDate = (filmA, filmB) => {\n  const weight = getWeightForNoDataFilm(filmA.date, filmB.date);\n\n  if (weight !== null) {\n    return weight;\n  }\n\n  return filmB.date.getTime() - filmA.date.getTime();\n};\n\nexport const sortByRating = (filmA, filmB) => {\n  const weight = getWeightForNoDataFilm(filmA.rating, filmB.rating);\n\n  if (weight !== null) {\n    return weight;\n  }\n\n  return filmB.rating - filmA.rating;\n};\n\n","import AbstractView from \"../view/abstract.js\";\n\nexport const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`\n};\n\nexport const renderTemplate = (container, template, place) => {\n  if (container instanceof AbstractView) {\n    container = container.getElement();\n  }\n\n  container.insertAdjacentHTML(place, template);\n};\n\nexport const render = (container, child, place) => {\n\n  if (container instanceof AbstractView) {\n    container = container.getElement();\n  }\n\n  if (child instanceof AbstractView) {\n    child = child.getElement();\n  }\n\n  switch (place) {\n    case RenderPosition.AFTERBEGIN\n      : container.prepend(child);\n      break;\n    case RenderPosition.BEFOREEND\n      : container.append(child);\n      break;\n  }\n};\n\nexport const generateTemplate = (array, template) => {\n  return array.map((element) => template(element)).join(``);\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const remove = (component) => {\n  if (!(component instanceof AbstractView)) {\n    throw new Error(`Can remove only components`);\n  }\n\n  component.getElement().remove();\n  component.removeElement();\n};\n\nexport const replace = (newChild, oldChild) => {\n  if (oldChild instanceof AbstractView) {\n    oldChild = oldChild.getElement();\n  }\n\n  if (newChild instanceof AbstractView) {\n    newChild = newChild.getElement();\n  }\n\n  const parent = oldChild.parentElement;\n\n  if (parent === null || oldChild === null || newChild === null) {\n    throw new Error(`Can't replace unexisting elements`);\n  }\n\n  parent.replaceChild(newChild, oldChild);\n};\n","import {createElement} from \"../utils/render.js\";\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstract, only concrete one.`);\n    }\n\n    this._element = null;\n    this._callback = {};\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate.`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this._getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {EMOJIS} from \"../const.js\";\nimport AbstractView from \"../view/abstract.js\";\nimport {generateTemplate} from \"../utils/render.js\";\n\nconst createCommentTemplate = (commentElement) => {\n  const {emoji, comment, commentDate, author} = commentElement;\n\n  return `<li class=\"film-details__comment\">\n    <span class=\"film-details__comment-emoji\">\n      <img src=\"./images/emoji/${emoji}.png\" width=\"55\" height=\"55\" alt=\"emoji-smile\">\n    </span>\n    <div>\n      <p class=\"film-details__comment-text\">${comment}</p>\n      <p class=\"film-details__comment-info\">\n        <span class=\"film-details__comment-author\">${author}</span>\n        <span class=\"film-details__comment-day\">${commentDate}</span>\n        <button class=\"film-details__comment-delete\">Delete</button>\n      </p>\n    </div>\n  </li>`;\n};\n\nconst createEmojiTemplate = (emoji) => {\n  return `<input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-${emoji}\" value=\"${emoji} checked\">\n    <label class=\"film-details__emoji-label\" for=\"emoji-${emoji}\">\n      <img src=\"./images/emoji/${emoji}.png\" width=\"30\" height=\"30\" alt=\"emoji-${emoji}\">\n    </label>`;\n};\n\n\nconst createCommentsListTemplate = (film) => {\n  const {comments} = film;\n\n  const commentTemplate = generateTemplate(comments, createCommentTemplate);\n  const emojiTemplate = generateTemplate(EMOJIS, createEmojiTemplate);\n\n  return `<div class=\"film-details__bottom-container\">\n      <section class=\"film-details__comments-wrap\">\n        <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n\n        <ul class=\"film-details__comments-list\">\n          ${commentTemplate}\n        </ul>\n\n        <div class=\"film-details__new-comment\">\n          <div for=\"add-emoji\" class=\"film-details__add-emoji-label\"></div>\n\n          <label class=\"film-details__comment-label\">\n            <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\n          </label>\n\n          <div class=\"film-details__emoji-list\">\n            ${emojiTemplate}\n          </div>\n        </div>\n      </section>\n    </div>`;\n};\n\nexport default class Comments extends AbstractView {\n  constructor(film) {\n    super();\n    this._film = film;\n  }\n\n  _getTemplate() {\n    return createCommentsListTemplate(this._film);\n  }\n}\n","import {MAX_DESCRIPTION_LENGTH} from \"../const.js\";\nimport {checkActiveElement} from \"../utils/project.js\";\nimport AbstractView from \"./abstract.js\";\n\nconst createFilmCardTemplate = (film) => {\n\n  const {filmPoster, filmTitle, rating, filmCreateYear, filmDuration, genres, description, commentsCount, isWatchlist, isWatched, isFavorite} = film;\n\n  const shortDescription = description.toString().length > MAX_DESCRIPTION_LENGTH ? `${description.slice(0, MAX_DESCRIPTION_LENGTH - 1)} …` : description;\n\n  const genre = genres[0];\n\n  const activeClass = `film-card__controls-item--active`;\n\n  const isWatchlistActive = checkActiveElement(isWatchlist, activeClass);\n  const isWatchedActive = checkActiveElement(isWatched, activeClass);\n  const isFavoriteActive = checkActiveElement(isFavorite, activeClass);\n\n  return (\n    `<article class=\"film-card\">\n      <h3 class=\"film-card__title\">${filmTitle}</h3>\n      <p class=\"film-card__rating\">${rating}</p>\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${filmCreateYear}</span>\n        <span class=\"film-card__duration\">${filmDuration}</span>\n        <span class=\"film-card__genre\">${genre}</span>\n      </p>\n      <img src=\"./images/posters/${filmPoster}\" alt=\"\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${shortDescription}</p>\n      <a class=\"film-card__comments\">${commentsCount} comments</a>\n      <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist ${isWatchlistActive}\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched ${isWatchedActive}\">Mark as watched</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--favorite ${isFavoriteActive}\">Mark as favorite</button>\n      </form>\n    </article>`\n  );\n};\n\nexport default class FilmCard extends AbstractView {\n  constructor(film) {\n    super();\n    this._film = film;\n\n    this._filmCardClickHandler = this._filmCardClickHandler.bind(this);\n    this._watchlistClickHandler = this._watchlistClickHandler.bind(this);\n    this._watchedClickHandler = this._watchedClickHandler.bind(this);\n    this._favoriteClickHandler = this._favoriteClickHandler.bind(this);\n  }\n\n  _getTemplate() {\n    return createFilmCardTemplate(this._film);\n  }\n\n  _filmCardClickHandler(evt) {\n    if (evt.target.classList.contains(`film-card__poster`)\n      || evt.target.classList.contains(`film-card__title`)\n      || evt.target.classList.contains(`film-card__comments`)) {\n      evt.preventDefault();\n      this._callback.filmCardClick();\n    }\n  }\n\n  _watchlistClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.watchlistClick();\n  }\n\n  _watchedClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.watchedClick();\n  }\n\n  _favoriteClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.favoriteClick();\n  }\n\n  setFilmCardClickHandler(callback) {\n    this._callback.filmCardClick = callback;\n    this.getElement()\n        .addEventListener(`click`, this._filmCardClickHandler);\n  }\n\n  setWatchlistClickHandler(callback) {\n    this._callback.watchlistClick = callback;\n    this.getElement()\n        .querySelector(`.film-card__controls-item--add-to-watchlist`)\n        .addEventListener(`click`, this._watchlistClickHandler);\n  }\n\n  setWatchedClickHandler(callback) {\n    this._callback.watchedClick = callback;\n    this.getElement()\n        .querySelector(`.film-card__controls-item--mark-as-watched`)\n        .addEventListener(`click`, this._watchedClickHandler);\n  }\n\n  setFavoriteClickHandler(callback) {\n    this._callback.favoriteClick = callback;\n    this.getElement().querySelector(`.film-card__controls-item--favorite`).addEventListener(`click`, this._favoriteClickHandler);\n  }\n}\n","import {getRandomInteger} from \"../utils/common.js\";\nimport AbstractView from \"./abstract.js\";\n\n\nexport const FILM_COUNT = 12;\nconst FILM_MIN_COUNT = 100500;\nconst FILM_MAX_COUNT = 1000500;\n\nconst ALL_FILM_COUNT = (FILM_COUNT === 0)\n  ? 0\n  : getRandomInteger(FILM_MIN_COUNT, FILM_MAX_COUNT);\n\nconst filmsCountFormat = ALL_FILM_COUNT.toLocaleString(`ru-RU`);\n\nconst createFilmCountTemplate = () => {\n  return (\n    `<p>${filmsCountFormat} movies inside</p>`\n  );\n};\n\nexport default class UserRating extends AbstractView {\n  _getTemplate() {\n    return createFilmCountTemplate();\n  }\n}\n\n","import {generateTemplate} from \"../utils/render.js\";\nimport {checkActiveElement} from \"../utils/project.js\";\nimport AbstractView from \"./abstract.js\";\n\nconst createGenresTemplate = (genre) => {\n  return `<span class=\"film-details__genre\">${genre}</span>`;\n};\n\nconst createFilmDetailsTemplate = (film) => {\n  const {filmPoster, filmTitle, rating, filmDuration, genres, description, filmOriginTitle, director, writers, actors, country, ageLimit, isWatchlist, isWatched, isFavorite, date} = film;\n\n  const filmGenresTemplate = generateTemplate(genres, createGenresTemplate);\n\n  const releaseDate = date.toLocaleString(`en-GB`, {year: `numeric`, month: `long`, day: `numeric`});\n\n  const checkedClass = `checked`;\n\n  const isWatchlistChecked = checkActiveElement(isWatchlist, checkedClass);\n  const isWatchedChecked = checkActiveElement(isWatched, checkedClass);\n  const isFavoriteChecked = checkActiveElement(isFavorite, checkedClass);\n\n  return (\n    `<section class=\"film-details\">\n      <form class=\"film-details__inner\" action=\"\" method=\"get\">\n        <div class=\"film-details__top-container\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n            <div class=\"film-details__poster\">\n              <img class=\"film-details__poster-img\" src=\"./images/posters/${filmPoster}\" alt=\"\">\n\n              <p class=\"film-details__age\">${ageLimit}</p>\n            </div>\n\n            <div class=\"film-details__info\">\n              <div class=\"film-details__info-head\">\n                <div class=\"film-details__title-wrap\">\n                  <h3 class=\"film-details__title\">${filmTitle}</h3>\n                  <p class=\"film-details__title-original\">Original: ${filmOriginTitle}</p>\n                </div>\n\n                <div class=\"film-details__rating\">\n                  <p class=\"film-details__total-rating\">${rating}</p>\n                </div>\n              </div>\n\n              <table class=\"film-details__table\">\n                <tbody><tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Director</td>\n                  <td class=\"film-details__cell\">${director}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Writers</td>\n                  <td class=\"film-details__cell\">${writers}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Actors</td>\n                  <td class=\"film-details__cell\">${actors}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Release Date</td>\n                  <td class=\"film-details__cell\">${releaseDate}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Runtime</td>\n                  <td class=\"film-details__cell\">${filmDuration}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Country</td>\n                  <td class=\"film-details__cell\">${country}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">${genres.length > 1 ? `Genres` : `Genre`}</td>\n                  <td class=\"film-details__cell\">${filmGenresTemplate}</td>\n                </tr>\n              </tbody></table>\n\n              <p class=\"film-details__film-description\">\n                ${description}\n              </p>\n            </div>\n          </div>\n\n          <section class=\"film-details__controls\">\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\" ${isWatchlistChecked}>\n            <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\" ${isWatchedChecked}>\n            <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\" ${isFavoriteChecked}>\n            <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n          </section>\n        </div>\n\n      </form>\n    </section>`\n  );\n};\n\nexport default class FilmDetails extends AbstractView {\n  constructor(film) {\n    super();\n    this._film = film;\n\n    this._closeButtonClickHandler = this._closeButtonClickHandler.bind(this);\n  }\n\n  _getTemplate() {\n    return createFilmDetailsTemplate(this._film);\n  }\n\n  _closeButtonClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setCloseButtonClickHandler(callback) {\n    const closeButton = this.getElement().querySelector(`.film-details__close-btn`);\n    this._callback.click = callback;\n    closeButton.addEventListener(`click`, this._closeButtonClickHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilmsBlockTemplate = () => {\n  return (\n    `<section class=\"films\">\n      <section class=\"films-list\">\n        <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n\n        <div class=\"films-list__container\">\n\n        </div>\n\n      </section>\n    </section>`\n  );\n};\n\n\nexport default class FilmsBlock extends AbstractView {\n  _getTemplate() {\n    return createFilmsBlockTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport {SortType} from \"../const.js\";\n\nconst createFilmsSortTemplate = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" class=\"sort__button sort__button--active\" data-sort-type=\"${SortType.DEFAULT}\">Sort by default</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"${SortType.DATE}\">Sort by date</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"${SortType.RATING}\">Sort by rating</a></li>\n    </ul>`\n  );\n};\n\nexport default class Sort extends AbstractView {\n  constructor() {\n    super();\n\n    this._sortTypeChangeHandler = this._sortTypeChangeHandler.bind(this);\n  }\n\n  _getTemplate() {\n    return createFilmsSortTemplate();\n  }\n\n  _sortTypeChangeHandler(evt) {\n    const sortButtons = this.getElement().querySelectorAll(`.sort__button`);\n\n    if (evt.target.tagName !== `A`) {\n      return;\n    }\n\n    evt.preventDefault();\n    sortButtons.forEach((button) => button.classList.remove(`sort__button--active`));\n    evt.target.classList.add(`sort__button--active`);\n\n    this._callback.sortTypeChange(evt.target.dataset.sortType);\n  }\n\n  setSortTypeChangeHandler(callback) {\n    this._callback.sortTypeChange = callback;\n    this.getElement().addEventListener(`click`, this._sortTypeChangeHandler);\n  }\n}\n\n","import AbstractView from \"./abstract.js\";\n\nconst createFilterItemTemplate = (filters) => {\n\n  const {watchlist, history, favorites} = filters;\n\n  return (\n    `<nav class=\"main-navigation\">\n      <div class=\"main-navigation__items\">\n        <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\">All movies</a>\n        <a href=\"#watchlist\" class=\"main-navigation__item\">Watchlist <span class=\"main-navigation__item-count\">${watchlist}</span></a>\n        <a href=\"#history\" class=\"main-navigation__item\">History <span class=\"main-navigation__item-count\">${history}</span></a>\n        <a href=\"#favorites\" class=\"main-navigation__item\">Favorites <span class=\"main-navigation__item-count\">${favorites}</span></a>\n      </div>\n      <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n    </nav>`\n  );\n};\n\nexport default class Filter extends AbstractView {\n  constructor(filters) {\n    super();\n    this._filters = filters;\n  }\n\n  _getTemplate() {\n    return createFilterItemTemplate(this._filters);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createMostCommentedFilmsTemplate = () => {\n  return (\n    `<section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">Most commented</h2>\n\n      <div class=\"films-list__container\">\n      </div>\n    </section>`\n  );\n};\n\nexport default class MostCommentedFilms extends AbstractView {\n  _getTemplate() {\n    return createMostCommentedFilmsTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createNoFilmsTemplate = () => {\n  return `<section class=\"films\">\n    <section class=\"films-list\">\n      <h2 class=\"films-list__title\">There are no movies in our database</h2>\n    </section>\n  </section>`;\n};\n\nexport default class FilmsList extends AbstractView {\n  _getTemplate() {\n    return createNoFilmsTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createShowMoreButtonTemplate = () => {\n  return (\n    `<button class=\"films-list__show-more\">Show more</button>`\n  );\n};\n\nexport default class ShowMoreButton extends AbstractView {\n  constructor() {\n    super();\n    this._showMoreClickHandler = this._showMoreClickHandler.bind(this);\n  }\n\n  _getTemplate() {\n    return createShowMoreButtonTemplate();\n  }\n\n  _showMoreClickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setShowMoreClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().addEventListener(`click`, this._showMoreClickHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createTopRatedFilmsTemplate = () => {\n  return (\n    `<section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">Top rated</h2>\n\n      <div class=\"films-list__container\">\n      </div>\n    </section>`\n  );\n};\n\n\nexport default class TopRatedFilms extends AbstractView {\n  _getTemplate() {\n    return createTopRatedFilmsTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createUserRatingTemplate = () => {\n  return (\n    `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">Movie Buff</p>\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n\nexport default class UserRating extends AbstractView {\n  _getTemplate() {\n    return createUserRatingTemplate();\n  }\n}\n"],"sourceRoot":""}